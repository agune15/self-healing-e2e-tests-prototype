{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-06-30T22:13:46.044Z",
    "end": "2025-06-30T22:14:31.058Z",
    "duration": 45014,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9e548f96-f106-4301-9671-ffe4d454749c",
      "title": "",
      "fullFile": "cypress/e2e/insuranceCalculation.cy.js",
      "file": "cypress/e2e/insuranceCalculation.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d6600544-81e6-4af0-9e01-93e24aae716e",
          "title": "Online Beitragsrechner",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Employed - Public insurance - 1 child",
              "fullTitle": "Online Beitragsrechner Employed - Public insurance - 1 child",
              "timedOut": null,
              "duration": 44918,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.visit('/online-beitragsrechner');\npage.acceptCookies();\ninsuranceChoice.selectOccupationalStatus(_selectors.default.employmentStatusOptionEmployed, this.inputData.employmentType);\ninsuranceChoice.inputIncome(this.inputData.income);\ninsuranceChoice.selectInsuranceProduct(_selectors.default.fullInsurance, this.inputData.insuranceProduct);\ninsuranceChoice.selectInsuranceStartDate(dateTime.getDateOfFirstDayOfTheMonthAfterNextMonth().date);\npersonalSituation.inputInvalidBirthDate(this.inputData.birthDates.invalidDate, this.birthDateErrors.invalidDate);\npersonalSituation.inputInvalidBirthDate(this.inputData.birthDates.futureDate, this.birthDateErrors.futureDate);\npersonalSituation.inputInvalidBirthDate(this.inputData.birthDates.olderThan101, this.birthDateErrors.olderThan101);\npersonalSituation.inputInvalidBirthDate(this.inputData.birthDates.youngerThan16, this.birthDateErrors.youngerThan16);\npersonalSituation.inputBirthDate(this.inputData.birthDates.validDate);\npersonalSituation.selectCurrentInsuranceType(_selectors.default.insuranceStatusStatutory, this.inputData.currentInsuranceType);\npersonalSituation.insureChild(this.inputData.isParent, this.inputData.birthDates.childDate);\ntariffOptions.selectRecommendedTariffOption();\ntariffOptions.selectTariff(this.inputData.tariffName);\ntariffOptions.setDailySicknessAllowance(this.inputData.dailySicknessAllowance);\ntariffOptions.assertMonthlyPayment(this.inputData.monthlyPayment);\ntariffOptions.continueWithSignup();\nsignup.seeComprehensiveSignupPage();",
              "err": {
                "message": "AssertionError: Timed out retrying after 20000ms: Expected to find element: `[data-cy=\"[data-testid='uc-accept-all-button']\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 20000ms: Expected to find element: `[data-cy=\"[data-testid='uc-accept-all-button']\"]`, but never found it.\n    at Context.eval (webpack://self-healing-e2e-tests-prototype/./cypress/support/commands.js:24:12)\n    at wrapped (https://www.ottonova.de/__cypress/runner/cypress_runner.js:141516:43)",
                "diff": null
              },
              "uuid": "171055d5-dd37-4c02-b092-823da0088c8a",
              "parentUUID": "d6600544-81e6-4af0-9e01-93e24aae716e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "171055d5-dd37-4c02-b092-823da0088c8a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 44918,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "result-[name]",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "quiet": true,
        "saveAllAttempts": false,
        "saveHtml": false,
        "saveJson": true,
        "reportDir": "reports/mocha-reports/.jsons/.jsons",
        "reportFilename": "result-[name]",
        "reportPageTitle": "Test Report",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}